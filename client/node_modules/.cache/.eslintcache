[{"/Users/yafetsegid/Desktop/Twitter_2/client/src/index.js":"1","/Users/yafetsegid/Desktop/Twitter_2/client/src/App.js":"2","/Users/yafetsegid/Desktop/Twitter_2/client/src/reportWebVitals.js":"3","/Users/yafetsegid/Desktop/Twitter_2/client/src/Welcome/Welcome.js":"4","/Users/yafetsegid/Desktop/Twitter_2/client/src/Favorite/Favorite.js":"5","/Users/yafetsegid/Desktop/Twitter_2/client/src/Search/Search.js":"6"},{"size":500,"mtime":1630988705185,"results":"7","hashOfConfig":"8"},{"size":1000,"mtime":1632663212415,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1631583038929,"results":"10","hashOfConfig":"8"},{"size":393,"mtime":1631583217743,"results":"11","hashOfConfig":"8"},{"size":3236,"mtime":1632704422519,"results":"12","hashOfConfig":"8"},{"size":2264,"mtime":1632665757692,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"wb3qzx",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/yafetsegid/Desktop/Twitter_2/client/src/index.js",[],["30","31"],"/Users/yafetsegid/Desktop/Twitter_2/client/src/App.js",["32"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Welcome from \"./Welcome/Welcome\";\nimport Search from \"./Search/Search\";\nimport Favorite from \"./Favorite/Favorite\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"header\">\n        {/* <div className=\"listHeader\"> */}\n        <Link>\n          <img to=\"/\" className=\"logo\" src={\"./image/twitter-icon.png\"} />\n        </Link>\n        <Link to=\"/\" className=\"search home\">\n          Home\n        </Link>\n        <Link to=\"/Search\" className=\"search\">\n          Search\n        </Link>\n        <Link to=\"/Favorite\" className=\"search\">\n          Favorites\n        </Link>\n        {/* </div> */}\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={Welcome} />\n        <Route exact path=\"/Search\" component={Search} />\n        <Route exact path=\"/Favorite\" component={Favorite} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/yafetsegid/Desktop/Twitter_2/client/src/reportWebVitals.js",[],"/Users/yafetsegid/Desktop/Twitter_2/client/src/Welcome/Welcome.js",["33"],"import React from \"react\";\nimport \"./Twitter.css\";\n\nconst Welcome = () => {\n  return (\n    <div className=\"container\">\n      <div>\n        <h1 className=\"Header_text\">\n          What\n          <br /> Happening\n          <br /> Right <br />\n          now\n        </h1>\n      </div>\n      <img className=\"big_bird\" src={\"./image/twitter-icon.png\"} />\n    </div>\n  );\n};\n\nexport default Welcome;\n","/Users/yafetsegid/Desktop/Twitter_2/client/src/Favorite/Favorite.js",["34","35","36","37","38","39","40","41"],"/Users/yafetsegid/Desktop/Twitter_2/client/src/Search/Search.js",["42","43","44"],"import React from \"react\";\nimport \"./Search.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { MdFavoriteBorder } from \"react-icons/md\";\nimport { AiOutlineRetweet } from \"react-icons/ai\";\nimport { FiSearch } from \"react-icons/fi\";\n\nconst Search = () => {\n  // const { onSearch } = props;\n\n  const [data, setData] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    axios\n      .get(`/search?text=${searchText}`)\n      .then((response) => {\n        setData(response.data.statuses);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  // function handleInput(e) {\n  //   const searchText = e.target.value;\n  //   setSearchText(searchText);\n  // }\n  return (\n    <>\n      <form className=\"listBox\" onSubmit={handleFormSubmit}>\n        <span className=\"search_box\">\n          <input\n            onChange={(e) => setSearchText(e.target.value)}\n            value={searchText}\n            className=\"search-tweet\"\n            type=\"text\"\n            placeholder=\"Search Twitter...\"\n          />\n          <button className=\"btn\" type=\"submit\">\n            <FiSearch />\n          </button>\n        </span>\n      </form>\n      <div>\n        <ul className=\"tweetFrame\">\n          {data.map((person) => (\n            <ul className=\"tweetBox\">\n              <li className=\"profileImage\">\n                {person.user.profile_image_url && (\n                  <img src={person.user.profile_image_url} />\n                )}\n              </li>\n\n              <li key={person.id}>{person.full_text}</li>\n              {person.extended_entities?.media[0]?.media_url && (\n                <img\n                  className=\"tweetImage\"\n                  src={person.extended_entities?.media[0]?.media_url}\n                />\n              )}\n              <ul className=\"tweetIcon\">\n                <MdFavoriteBorder size=\"18px\" />\n                <li className=\"likeIcon\">{person.retweet_count}</li>\n                <AiOutlineRetweet size=\"18px\" />\n                <li className=\"retweetIcon\">{person.favorite_count}</li>\n              </ul>\n            </ul>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Search;\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":15,"column":11,"nodeType":"51","endLine":15,"endColumn":75},{"ruleId":"49","severity":1,"message":"50","line":15,"column":7,"nodeType":"51","endLine":15,"endColumn":68},{"ruleId":"52","severity":1,"message":"53","line":4,"column":20,"nodeType":"54","messageId":"55","endLine":4,"endColumn":29},{"ruleId":"49","severity":1,"message":"50","line":69,"column":9,"nodeType":"51","endLine":73,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":74,"column":9,"nodeType":"51","endLine":78,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":79,"column":9,"nodeType":"51","endLine":83,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":84,"column":9,"nodeType":"51","endLine":88,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":89,"column":9,"nodeType":"51","endLine":93,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":101,"column":19,"nodeType":"51","endLine":101,"endColumn":62},{"ruleId":"49","severity":1,"message":"50","line":109,"column":19,"nodeType":"51","endLine":112,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":4,"column":20,"nodeType":"54","messageId":"55","endLine":4,"endColumn":29},{"ruleId":"49","severity":1,"message":"50","line":53,"column":19,"nodeType":"51","endLine":53,"endColumn":62},{"ruleId":"49","severity":1,"message":"50","line":59,"column":17,"nodeType":"51","endLine":62,"endColumn":19},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]